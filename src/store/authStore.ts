// src/store/authStore.ts
import { create } from 'zustand';
import { persist } from 'zustand/middleware';
import { type User as TelegramUser } from '@telegram-apps/sdk-react';
import { type BackendProfile } from '../lib/api/authService';

type PersistedAuthState = {
  accessToken: string | null;
  isAuthenticated: boolean;
};

interface AuthState extends PersistedAuthState {
  isLoading: boolean;
  user: TelegramUser | null;
  profile: BackendProfile | null;
  login: (accessToken: string, user: TelegramUser | null, profile: BackendProfile | null) => void;
  logout: () => void;
  setLoading: (loading: boolean) => void;
}

export const useAuthStore = create(
  persist<AuthState>(
    (set, get) => ({
      accessToken: null,
      user: null,
      profile: null,
      isLoading: true,
      isAuthenticated: false,

      login: (accessToken, user, profile) => {
        console.log("üîê –í—ã–ø–æ–ª–Ω—è–µ–º –ª–æ–≥–∏–Ω —Å —Ç–æ–∫–µ–Ω–æ–º:", accessToken ? "–µ—Å—Ç—å" : "–Ω–µ—Ç");
        set({
          accessToken,
          user,
          profile,
          isAuthenticated: true,
          isLoading: false,
        });
      },

      logout: () => {
        console.log("üö™ –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã—Ö–æ–¥");
        set({
          accessToken: null,
          user: null,
          profile: null,
          isAuthenticated: false,
          isLoading: true, // –ü–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ —Å–Ω–æ–≤–∞ –≤–∫–ª—é—á–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        });
      },

      setLoading: (loading) => {
        const currentLoading = get().isLoading;
        if (currentLoading !== loading) {
          console.log("‚è≥ –ò–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏:", loading);
          set({ isLoading: loading });
        }
      },
    }),
    {
      name: "auth-storage",
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ–∫–µ–Ω –∏ —Å—Ç–∞—Ç—É—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      partialize: (state) => ({ 
        accessToken: state.accessToken,
        isAuthenticated: state.isAuthenticated 
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      } as any),
      
      // –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ localStorage
      onRehydrateStorage: () => (state, error) => {
        if (error) {
          console.error("üíæ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è:", error);
          return;
        }
        
        console.log("üíæ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ localStorage:", {
          hasToken: !!state?.accessToken,
          isAuthenticated: state?.isAuthenticated
        });

        // –ö–õ–Æ–ß–ï–í–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º isLoading –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, 
        // –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å —Ç–æ–∫–µ–Ω –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã –ª–∏ –º—ã
        if (state && state.isAuthenticated && state.accessToken) {
          // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –∏ –º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã, –Ω–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω
          state.isLoading = true; // –û—Å—Ç–∞–≤–ª—è–µ–º true, —á—Ç–æ–±—ã AppInitializer –º–æ–≥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
        } else if (state) {
          // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã, –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω—É–∂–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
          state.isLoading = true;
          state.isAuthenticated = false; // –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
        }
      },
    }
  )
);