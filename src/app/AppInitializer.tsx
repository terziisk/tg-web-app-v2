// src/app/AppInitializer.tsx
import { useEffect } from 'react';
import { useLaunchParams, useRawInitData } from '@telegram-apps/sdk-react';
import { useAuthStore } from '../store/authStore';
import { authenticateUser, verifyAndFetchUser } from '../lib/api/authService';
import AppLoader from './AppLoader';

// –≠—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç-–æ–±–µ—Ä—Ç–∫–∞ –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—Å–µ–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º –∑–∞–≥—Ä—É–∑–∫–∏
export const AppInitializer = ({ children }: { children: React.ReactNode }) => {
  const { accessToken, login, logout, setLoading, isLoading } = useAuthStore();
  const launchParams = useLaunchParams();
  console.log("üöÄ –ó–∞–ø—É—â–µ–Ω AppInitializer —Å launchParams:", launchParams);
  const user = launchParams.tgWebAppData?.user;
  const rawInitData = useRawInitData();

  useEffect(() => {
    const startup = async () => {
        
      // –ñ–¥–µ–º, –ø–æ–∫–∞ SDK –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤
      if (!rawInitData || !user) {
        return;
      }

      // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –µ–≥–æ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
      if (accessToken) {
        try {
          console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω...');
          // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±—ç–∫–µ–Ω–¥–∞
          const backendData = await verifyAndFetchUser();
          // –ï—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç–æ—Ä–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
          login(accessToken, user, backendData);
          return;
        } catch (error) {
          console.warn('–¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω –∏–ª–∏ –∏—Å—Ç–µ–∫. –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã—Ö–æ–¥...', error);
          // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω (—Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª 401), –≤—ã—Ö–æ–¥–∏–º –∏ –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ
          logout();
          // –ù–µ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, –ø–æ–∑–≤–æ–ª—è—è –µ–π –ø–µ—Ä–µ–π—Ç–∏ –∫ –ª–æ–≥–∏–∫–µ –ª–æ–≥–∏–Ω–∞
        }
      }

      // –ï—Å–ª–∏ –º—ã –∑–¥–µ—Å—å, –∑–Ω–∞—á–∏—Ç —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç –∏–ª–∏ –æ–Ω –±—ã–ª –Ω–µ–≤–∞–ª–∏–¥–µ–Ω
      try {
        console.log('–¢–æ–∫–µ–Ω–∞ –Ω–µ—Ç. –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...');
          // 1. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        const authData = await authenticateUser(rawInitData, launchParams);

        // 2. –°–†–ê–ó–£ –ñ–ï —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ —Å—Ç–æ—Ä. –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–∫–∞ null.
        login(authData.accessToken, user, null);
        // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞, —Å—Ä–∞–∑—É –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
        const backendData = await verifyAndFetchUser();

        login(authData.accessToken, user, backendData);
        console.log('‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
        setLoading(false); // –í—ã–∫–ª—é—á–∞–µ–º –∑–∞–≥—Ä—É–∑—á–∏–∫ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      }
    };

    startup();
  }, [rawInitData, user, accessToken, login, logout, setLoading, launchParams]);

  if (isLoading) {
    return (
      <div className="flex h-[80vh] w-full items-center justify-center">
        <AppLoader />
      </div>
    );
  }

  return <>{children}</>;
};